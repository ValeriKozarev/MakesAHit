rmse(oil_test$Heating_Oil,predict(ptree11,oil_test))
rmse(oil_test$Heating_Oil,predict(ptree5,oil_test))
fhs <- as.factor(oil$Home_Size)
fins <- as.factor(oil$Insulation)
fno <- as.factor(oil$Num_Occupants)
foil <- data.frame(Heating_Oil = oil$Heating_Oil,
Temperature = oil$Temperature,Avg_Age = oil$Avg_Age,
Home_Size = fhs, Insulation = fins, Num_Occupants = fno)
foil_train <- foil[ind==1,]
foil_test <- foil[ind==2,]
fptree <- rpart(Heating_Oil ~ Insulation + Temperature + Num_Occupants + Avg_Age + Home_Size,data = foil_train,method="anova",
control=rpart.control(minbucket=5,cp=0))
plotcp(fptree)
printcp(fptree)
a[8]
m1 <- lm(Heating_Oil ~ Insulation + Temperature + Num_Occupants + Avg_Age + Home_Size,data = oil_train)
summary(m1)
rmse(oil_test$Heating_Oil,predict(m1,oil_test))
plot(oil_test$Heating_Oil,predict(ptree11,oil_test))
clear
plot(oil_test$Heating_Oil,predict(ptree11,oil_test))
points(oil_test$Heating_Oil,predict(m1,oil_test),col="red")
m2 <- lm(Heating_Oil ~ Insulation + Temperature + Num_Occupants + Avg_Age + Home_Size,data = foil_train)
summary(m2)
rmse(foil_test$Heating_Oil,predict(m2,foil_test))
install.packages("ggplot2")
install.packages("gmodels")
install.packages("class")
library(ggplot2)
library(gmodels)
library(class)
install.packages("ggplot2")
install.packages("gmodels")
install.packages("class")
library(ggplot2)
library(gmodels)
library(class)
install.packages("ggplot2")
wine = read.csv("wine-quality.csv", header=T)
head(nba)
str(nba)
wine = read.csv("/Users/nikhilkaul/Documents/Fall Semester 2018/ST 442/Datasets/winequality-white.csv", header=T)
head(wine)
str(wine)
set.seed(1234)
ind <- sample(2, nrow(wine), replace=TRUE, prob=c(0.67, 0.33))
wine_training <- wine[ind==1, 1:11]
nba_test <- wine[ind==2, 1:11]
nba_trainLabels <- wine[ind==1, 12]
nba_testLabels <- wine[ind==2, 12]
wine_training <- wine[ind==1, 1:11]
wine_test <- wine[ind==2, 1:11]
wine_trainLabels <- wine[ind==1, 12]
wine_testLabels <- wine[ind==2, 12]
wine_pred <- knn(train = wine_training, test = wine_test, cl = wine_trainLabels, k=5)
ct = CrossTable(x = wine_testLabels, y = wine_pred, prop.chisq=FALSE)
install.packages("ggplot2")
install.packages("gmodels")
install.packages("class")
library(ggplot2)
library(gmodels)
library(class)
wine_pred <- knn(train = wine_training, test = wine_test, cl = wine_trainLabels, k=5)
ct = CrossTable(x = wine_testLabels, y = wine_pred, prop.chisq=FALSE)
acc = sum(diag(ct$t))/sum(ct$t); acc
1 - acc
View(ct)
View(ct)
wine_pred <- knn(train = wine_training, test = wine_test, cl = wine_trainLabels, k=10)
ct = CrossTable(x = wine_testLabels, y = wine_pred, prop.chisq=FALSE)
acc = sum(diag(ct$t))/sum(ct$t); acc
1 - acc
sqrt(1584)
wine_pred <- knn(train = wine_training, test = wine_test, cl = wine_trainLabels, k=40)
ct = CrossTable(x = wine_testLabels, y = wine_pred, prop.chisq=FALSE)
acc = sum(diag(ct$t))/sum(ct$t); acc
1 - acc
for(k in 1:20)
wine_pred <- knn(train = wine_training, test = wine_test, cl = wine_trainLabels, k=40)
ct = CrossTable(x = wine_testLabels, y = wine_pred, prop.chisq=FALSE)
normalize <- function(x) {
num <- x - mean(x)
denom <- sd(x)
return (num/denom)
}
winen <- as.data.frame(lapply(wine[1:11], normalize))
winen_training <- winen[ind==1, ]
winen_test <- winen[ind==2, ]
winen_trainLabels <- wine[ind==1, 12]
winen_testLabels <- wine[ind==2, 12]
nban_pred <- knn(train = nban_training, test = nban_test, cl = nban_trainLabels, k=5)
ctn = CrossTable(x = nban_testLabels, y = nban_pred, prop.chisq=FALSE
winen_pred <- knn(train = winen_training, test = winen_test, cl = winen_trainLabels, k=5)
ctn = CrossTable(x = winen_testLabels, y = winen_pred, prop.chisq=FALSE)
accn = sum(diag(ctn$t))/sum(ctn$t); accn       # Overall accuracy
1 - accn                                       # Overall error rate
for( k in 1:20 ){
winen_pred <- knn(train = winen_training, test = winen_test, cl = winen_trainLabels, k=k)
ctn = CrossTable(x = winen_testLabels, y = winen_pred, prop.chisq=FALSE
### Assess Performance ###
acck = c( acck, sum(diag(tmp_ct$t))/sum(tmp_ct$t) )
}
plot(1:20, acck, type="o", lwd=2, pch=16, xlab="k", ylab="Accuracy")
for( k in 1:20 ){
winen_pred <- knn(train = winen_training, test = winen_test, cl = winen_trainLabels, k=k)
ctn = CrossTable(x = winen_testLabels, y = winen_pred, prop.chisq=FALSE
### Assess Performance ###
acck = c( acck, sum(diag(tmp_ct$t))/sum(tmp_ct$t) )
}
plot(1:20, acck, type="o", lwd=2, pch=16, xlab="k", ylab="Accuracy")
clear
for( k in 1:20 ){
winen_pred <- knn(train = winen_training, test = winen_test, cl = winen_trainLabels, k=k)
ctn = CrossTable(x = winen_testLabels, y = winen_pred, prop.chisq=FALSE
### Assess Performance ###
acck = c( acck, sum(diag(tmp_ct$t))/sum(tmp_ct$t) )
}
plot(1:20, acck, type="o", lwd=2, pch=16, xlab="k", ylab="Accuracy")
for( k in 1:20 ){
winen_pred <- knn(train = winen_training, test = winen_test, cl = winen_trainLabels, k=k)
ctn = CrossTable(x = winen_testLabels, y = winen_pred, prop.chisq=FALSE)
acck = c( acck, sum(diag(tmp_ct$t))/sum(tmp_ct$t) )
}
plot(1:20, acck, type="o", lwd=2, pch=16, xlab="k", ylab="Accuracy")
for( k in 1:20 ){
winen_pred <- knn(train = winen_training, test = winen_test, cl = winen_trainLabels, k=k)
ctn = CrossTable(x = winen_testLabels, y = winen_pred, prop.chisq=FALSE)
acck = c( acck, sum(diag(tmp_ct$t))/sum(tmp_ct$t) )
}
acck = NULL
for( k in 1:20 ){
winen_pred <- knn(train = winen_training, test = winen_test, cl = winen_trainLabels, k=k)
ctn = CrossTable(x = winen_testLabels, y = winen_pred, prop.chisq=FALSE)
acck = c( acck, sum(diag(tmp_ct$t))/sum(tmp_ct$t) )
}
acck = NULL
for( k in 1:20 ){
winen_pred <- knn(train = winen_training, test = winen_test, cl = winen_trainLabels, k=k)
ctn = CrossTable(x = winen_testLabels, y = winen_pred, prop.chisq=FALSE)
acck = c( acck, sum(diag(ctn$t))/sum(ctn$t) )
}
plot(1:20, acck, type="o", lwd=2, pch=16, xlab="k", ylab="Accuracy")
winen_pred <- knn(train = winen_training, test = winen_test, cl = winen_trainLabels, k=1)
ctn = CrossTable(x = winen_testLabels, y = winen_pred, prop.chisq=FALSE)
accn = sum(diag(ctn$t))/sum(ctn$t); accn       # Overall accuracy
1 - accn                                       # Overall error rate
winen_pred <- knn(train = winen_training, test = winen_test, cl = winen_trainLabels, k=5)
ctn = CrossTable(x = winen_testLabels, y = winen_pred, prop.chisq=FALSE)
accn = sum(diag(ctn$t))/sum(ctn$t); accn       # Overall accuracy
1 - accn                                       # Overall error rate
winen_pred <- knn(train = winen_training, test = winen_test, cl = winen_trainLabels, k=1)
ctn = CrossTable(x = winen_testLabels, y = winen_pred, prop.chisq=FALSE)
summary(wine)
library(rpart)
library(DMwR)
library(rpart)
library(DMwR)
ctree <- rpart(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol,data=winen_training,method="class")
ctree <- rpart(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol,data=winen,method="class")
ctree <- rpart(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol,data=wine_training,method="class")
ctree <- rpart( fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol,data=wine_training,method="class")
ctree <- rpart(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol,data=winen_training,method="class")
ctree <- rpart(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol,newdata=winen_training,method="class")
ctree <- rpart(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol,data=winen_training,method="class")
ctree1 <- rpart(CAT..MEDV ~ CRIM + ZN + INDUS + CHAS + NOX + RM + AGE + DIS + RAD
+ TAX + PTRATIO + B + LSTAT,data=bh_train,method="class")
ctree1 <- rpart(CAT..MEDV ~ CRIM + ZN + INDUS + CHAS + NOX + RM + AGE + DIS + RAD
+ TAX + PTRATIO + B + LSTAT,data=winen_training,method="class")
ctree <- rpart(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol,data=winen_training,method="class")
winen_training <- winen[ind==1, ]
winen_test <- winen[ind==2, ]
winen_trainLabels <- wine[ind==1, 12]
winen_testLabels <- wine[ind==2, 12]
ctree <- rpart(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol,data=winen_training,method="class")
ctree <- rpart(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol,data=wineg,method="class")
ctree <- rpart(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol,data=wine,method="class")
set.seed(13928401)
ind <- sample(2,nrow(wine),replace=T,prob=c(0.67,0.33))
wine_train <- bh[ind==1,]
wine_test <- bh[ind==2,]
set.seed(13928401)
ind <- sample(2,nrow(wine),replace=T,prob=c(0.67,0.33))
wine_train <- wine[ind==1,]
wine_test <- wine[ind==2,]
ctree <- rpart(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol,data=wine,method="class")
prettyTree(ctree)
ctree <- rpart(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol,data=wine,method="class", control=rpart.control(minbucket=3,cp=0))
prettyTree(ctree)
ctree3 <- prune(ctree1,cp=0.03)
ctree3 <- prune(ctree,cp=0.03)
prettyTree(ctree3)
ctree <- rpart(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol,data=wine,method="class")
prettyTree(ctree)
summary(ctree)
ctree <- rpart(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol,data=wine_train,method="class")
prettyTree(ctree)
summary(ctree)
ctree <- rpart(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol,data=wine_test,method="class")
prettyTree(ctree)
ctree <- rpart(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol,data=wine_train,method="class")
prettyTree(ctree)
summary(ctree)
printcp(ctree)
plotcp(ctree)
winen_training <- winen[ind==1, ]
winen_test <- winen[ind==2, ]
winen_trainLabels <- wine[ind==1, 12]
winen_testLabels <- wine[ind==2, 12]
set.seed(1234)
ind <- sample(2, nrow(nbarn), replace=TRUE, prob=c(0.67, 0.33))
winen <- as.data.frame(lapply(wine[1:11], normalize))
set.seed(1234)
ind <- sample(2, nrow(nbarn), replace=TRUE, prob=c(0.67, 0.33))
set.seed(1234)
ind <- sample(2, nrow(winen), replace=TRUE, prob=c(0.67, 0.33))
winen <- as.data.frame(lapply(wine[1:11], normalize))
set.seed(1234)
ind <- sample(2, nrow(winen), replace=TRUE, prob=c(0.67, 0.33))
winen_training <- winen[ind==1, ]
winen_test <- winen[ind==2, ]
winen_trainLabels <- wine[ind==1, 12]
winen_testLabels <- wine[ind==2, 12]
winen <- as.data.frame(lapply(wine[1:11], normalize))
set.seed(1234)
ind <- sample(3, nrow(winen), replace=TRUE, prob=c(0.75, 0.25, 0.25))
winen_training <- winen[ind==1, ]
winen_test <- winen[ind==2, ]
winen_validation <- winen[ind==3, ]
winen_trainLabels <- wine[ind==1, 12]
winen_testLabels <- wine[ind==2, 12]
winen_validationLabels <- wine[ind==3, 12]
summary(winen_validationLabels)
acck = NULL
for( k in 1:20 ){
winen_pred <- knn(train = winen_training, test = winen_validation, cl = winen_trainLabels, k=k)
ctn = CrossTable(x = winen_testLabels, y = winen_pred, prop.chisq=FALSE)
acck = c( acck, sum(diag(ctn$t))/sum(ctn$t) )
}
wine = read.csv("/Users/nikhilkaul/Documents/Fall Semester 2018/ST 442/Datasets/winequality-white.csv", header=T)
class(wine)
class(wine$quality)
wine$quality <- as.factor(wine$quality)
class(wine$quality)
acck = NULL
for( k in 1:20 ){
winen_pred <- knn(train = winen_training, test = winen_validation, cl = winen_trainLabels, k=k)
ctn = CrossTable(x = winen_testLabels, y = winen_pred, prop.chisq=FALSE)
acck = c( acck, sum(diag(ctn$t))/sum(ctn$t) )
rmse()
}
acck = NULL
for( k in 1:20 ){
winen_pred <- knn(train = winen_training, test = winen_test, cl = winen_trainLabels, k=k)
ctn = CrossTable(x = winen_testLabels, y = winen_pred, prop.chisq=FALSE)
acck = c( acck, sum(diag(ctn$t))/sum(ctn$t) )
rmse()
}
acck = NULL
for( k in 1:20 ){
winen_pred <- knn(train = winen_training, test = winen_test, cl = winen_trainLabels, k=k)
ctn = CrossTable(x = winen_testLabels, y = winen_pred, prop.chisq=FALSE)
acck = c( acck, sum(diag(ctn$t))/sum(ctn$t) )
rmse(acck, k)
}
class(wine$quality)
normalize <- function(x) {
num = x - mean(x)
denom=sd(x)
return(num/denom)
}
winen <- as.data.frame(lapply(wine[1:11], normalize))
winen_training <- winen[ind==1, ]
winen_test <- winen[ind==2, ]
winen_trainLabels <- wine[ind==1, 12]
winen_testLabels <- wine[ind==2, 12]
acck = NULL
for( k in 1:20 ){
winen_pred <- knn(train = winen_training, test = winen_test, cl = winen_trainLabels, k=k)
ctn = CrossTable(x = winen_testLabels, y = winen_pred, prop.chisq=FALSE)
acck = c( acck, sum(diag(ctn$t))/sum(ctn$t) )
}
plot(1:20, acck, type="o", lwd=2, pch=16, xlab="k", ylab="Accuracy")
acck = NULL
for( k in 1:20 ){
winen_pred <- knn(train = winen_training, test = winen_test, cl = winen_trainLabels, k=k)
ctn = CrossTable(x = winen_testLabels, y = winen_pred, prop.chisq=FALSE)
acck = c( acck, sum(diag(ctn$t))/sum(ctn$t) )
}
acck = NULL
for( k in 1:20 ){
winen_pred <- knn(train = winen_training, test = winen_test, cl = winen_trainLabels, k=1)
ctn = CrossTable(x = winen_testLabels, y = winen_pred, prop.chisq=FALSE)
acck = c( acck, sum(diag(ctn$t))/sum(ctn$t) )
}
summary(ctree)
load("~/Documents/Fall Semester 2018/ST 442/Homework/HW6/.RData")
library(RSQLite)
delay.con
delay.con = dbConnect("SQLite", dbname = "AirlineDelay.sqlite3")
library(RSQLite)
delay.con = dbConnect("SQLite", dbname = "AirlineDelay.sqlite3")
delay.con = dbConnect("RSQLite::SQLite()", dbname = "AirlineDelay.sqlite3")
library(RSQLite)
delay.con = dbConnect(RSQLite::SQLite(), dbname = "AirlineDelay.sqlite3")
delays87
delay.con
prop
dbGetQuery(delay.con, "SELECT COUNT(*) FROM AirlineDelay WHERE Year=1988 AND Month=10")
dbGetQuery(delay.con, "SELECT COUNT(*) FROM AirlineDelay WHERE Year=1988 AND Month=10")
load("~/Documents/Fall Semester 2018/ST 442/Homework/HW6/.RData")
dbGetQuery(delay.con, "SELECT COUNT(*) FROM AirlineDelay WHERE Year=1988 AND Month=10")
load("~/Documents/Fall Semester 2018/ST 442/Homework/HW6/.RData")
delay.con = dbConnect(RSQLite::SQLite(), dbname = "AirlineDelay.sqlite3")
dbGetQuery(delay.con, "SELECT COUNT(*) FROM AirlineDelay WHERE Year=1988 AND Month=10")
library(RSQLite)
delay.con = dbConnect(RSQLite::SQLite(), dbname = "AirlineDelay.sqlite3")
delays87 = dbGetQuery(delay.con, "SELECT * FROM AirlineDelay WHERE Year=1987")
library(RSQLite)
library(DBI)
dbConnect(RSQLite::SQLite(), dbname="AirlineDelay.sqlite3")
delays87 = dbGetQuery(delay.con, "Select * FROM AirlineDelay WHERE Year=1987")
delay.con <- dbConnect(RSQLite::SQLite(), dbname="AirlineDelay.sqlite3")
delays87 = dbGetQuery(delay.con, "Select * FROM AirlineDelay WHERE Year=1987")
nrow(delays87)
delay.con <- dbConnect(RSQLite::SQLite(), dbname="AirlineDelay.sqlite3")
delays87 = dbGetQuery(delay.con, "Select * FROM AirlineDelay WHERE Year=1987")
delay.con <- dbConnect(RSQLite::SQLite(), dbname="AirlineDelay.sqlite3")
delays87 = dbGetQuery(delay.con, "Select * FROM AirlineDelay WHERE Year=1987")
library(RSQLite)
library(DBI)
delay.con <- dbConnect(RSQLite::SQLite(), dbname="AirlineDelay.sqlite3")
delays87 = dbGetQuery(delay.con, "Select * FROM AirlineDelay WHERE Year=1987")
ctree <- rpart(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol,data=winen_training,method="class")
library(DMwR)
library(rpart)
wine = read.csv("wine-quality.csv", header=T)
wine = read.csv("/Users/nikhilkaul/Documents/Fall Semester 2018/ST 442/Datasets/winequality-white.csv", header=T)
str(wine)
winen_training <- winen[ind==1, ]
winen <- as.data.frame(lapply(wine[1:11], normalize))
normalize <- function(x) {
num <- x - mean(x)
denom <- sd(x)
return (num/denom)
}
winen <- as.data.frame(lapply(wine[1:11], normalize))
winen_training <- winen[ind==1, ]
ind <- sample(2, nrow(wine), replace=TRUE, prob=c(0.67, 0.33))
winen_training <- winen[ind==1, ]
winen_test <- winen[ind==2, ]
winen_trainLabels <- wine[ind==1, 12]
winen_testLabels <- wine[ind==2, 12]
rtree <- rpart(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol,data=winen,method="anova")
rtree <- rpart(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol,data=wine,method="anova")
prettyTree(rtree)
winen <- as.data.frame(lapply(wine[1:12], normalize))
winen_training <- winen[ind==1, ]
winen_test <- winen[ind==2, ]
winen_trainLabels <- wine[ind==1, 12]
winen_testLabels <- wine[ind==2, 12]
rtree <- rpart(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol,data=winen,method="anova")
prettyTree(rtree)
summary(rtree)
yhat <- predict(ptree,winen_test)
print(yhat)
y <- winen_test$size
print(y)
sse <- sum((y-yhat)^2)
print(sse)
#RMSE
sqrt(sse/nrow(bomb_winen))
yhat <- predict(rtree,winen_test)
print(yhat)
y <- winen_test$size
print(y)
sse <- sum((y-yhat)^2)
print(sse)
#RMSE
sqrt(sse/nrow(bomb_winen))
yhat <- predict(rtree,winen_test)
print(yhat)
y <- winen_test$size
print(y)
sse <- sum((y-yhat)^2)
print(sse)
#RMSE
sqrt(sse/nrow(winen_test))
summary(rtree)
rtree <- rpart(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol,data=wine,method="anova")
summary(rtree)
rtree <- rpart(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol,data=wine,method="anova")
summary(rtree)
rmse <- function(y,yhat) {
num <- sum((y - yhat)^2)
denom <- length(y)
return(sqrt(num/denom))
}
yhat <- predict(ptree,wine_test)
print(yhat)
y <- wine_test$size
print(y)
sse <- sum((y-yhat)^2)
print(sse)
#RMSE
sqrt(sse/nrow(wine_test))
wine = read.csv("/Users/nikhilkaul/Documents/Fall Semester 2018/ST 442/Datasets/winequality-white.csv", header=T)
wine_training <- wine[ind==1, 1:11]
wine_test <- wine[ind==2, 1:11]
wine_trainLabels <- wine[ind==1, 12]
wine_testLabels <- wine[ind==2, 12]
rtree <- rpart(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol,data=wine,method="anova")
yhat <- predict(ptree,wine_test)
print(yhat)
y <- wine_test$size
print(y)
sse <- sum((y-yhat)^2)
print(sse)
#RMSE
sqrt(sse/nrow(wine_test))
wine_test
yhat <- predict(ptree,wine_test)
print(yhat)
y <- wine_test$size
print(y)
sse <- sum((y-yhat)^2)
print(sse)
#RMSE
sqrt(sse/nrow(wine_test))
yhat <- predict(ptree,wine_test)
print(yhat)
y <- wine_test$quality
print(y)
sse <- sum((y-yhat)^2)
print(sse)
#RMSE
sqrt(sse/nrow(wine_test))
yhat <- predict(ptree,wine_test)
y <- wine_testLabels$quality
print(y)
sse <- sum((y-yhat)^2)
#RMSE
sqrt(sse/nrow(wine_test))
yhat <- predict(rtree,wine_test)
print(yhat)
y <- wine_test$quality
print(y)
sse <- sum((y-yhat)^2)
print(sse)
#RMSE
sqrt(sse/nrow(wine_test))
yhat <- predict(rtree,wine_test)
print(yhat)
y <- wine_testLabels$quality
print(y)
sse <- sum((y-yhat)^2)
print(sse)
#RMSE
sqrt(sse/nrow(wine_test))
yhat <- predict(rtree,wine_test)
y <- wine_testLabels$quality
print(y)
sse <- sum((y-yhat)^2)
#RMSE
sqrt(sse/nrow(wine_test))
yhat <- predict(rtree,wine_test)
y <- wine_testLabels
print(y)
sse <- sum((y-yhat)^2)
#RMSE
sqrt(sse/nrow(wine_test))
rtree <- rpart(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol,data=wine,method="anova")
yhat <- predict(rtree,wine_test)
y <- wine_testLabels
sse <- sum((y-yhat)^2)
#RMSE
sqrt(sse/nrow(wine_test))
humidity <- c(85, 90, 86,96,80,70,65,95,70,80,71,89,75,91,85,45)
summary(humidity)
size(humidity)
length(humidity)
humidity <- c(85, 90, 86,96,80,70,65,95,70,80,71,89,75,91,85,45)
summary(humidity)
length(humidity)
plot(humidity)
require(ppls)
import(ppls)
scalar1 <- function(x) {x / sqrt(sum(x^2))}
scalar1(humidity)
nhum <- scalar1(humidity)
plot(nhum)
dnorm(nhum)
plot(x=nhum, y=dnorm(nhum))
plot(x=nhum, y=pnorm(nhum))
plot(x=nhum, y=qnorm(nhum))
plot(x=nhum, y=pnorm(0))
plot(x=nhum, y=pnorm(nhum))
pnorm(humidity)
humidity
qnorm(humidity)
dnorm(humidity)
humidity <- c(85, 90, 86,96,80,70,65,95,70,80,71,89,75,91,85,45)
pnorm(humidity)
scalar1 <- function(x) {x / sqrt(sum(x^2))}
scalar1(humidity)
scaled = scale(humidity)
scaled
plot(scaled)
plot(x=scaled)
dnorm(scaled)
plot(x=scaled, y=dnorm(scaled))
source('~/Documents/Spring Semester 2019/CSC 422/Final Project/MakesHit_nkaul2.R')
source('~/Documents/Spring Semester 2019/CSC 422/Final Project/MakesHit_nkaul2.R')
